package com.techguy.application.model;
// Generated Jan 3, 2019 9:27:06 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Page generated by hbm2java
 */
@Entity
@Table(name="page"
    ,catalog="techguy"
)
public class Page  implements java.io.Serializable {


     private int pageId;
     private String name;
     private String category;
     private String url;
     private String description;
     private Set<PageFunction> pageFunctions = new HashSet<PageFunction>(0);

    public Page() {
    }

	
    public Page(int pageId) {
        this.pageId = pageId;
    }
    public Page(int pageId, String name, String category, String url, String description, Set<PageFunction> pageFunctions) {
       this.pageId = pageId;
       this.name = name;
       this.category = category;
       this.url = url;
       this.description = description;
       this.pageFunctions = pageFunctions;
    }
   
     @Id 

    
    @Column(name="page_id", unique=true, nullable=false)
    public int getPageId() {
        return this.pageId;
    }
    
    public void setPageId(int pageId) {
        this.pageId = pageId;
    }

    
    @Column(name="name")
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="category")
    public String getCategory() {
        return this.category;
    }
    
    public void setCategory(String category) {
        this.category = category;
    }

    
    @Column(name="url")
    public String getUrl() {
        return this.url;
    }
    
    public void setUrl(String url) {
        this.url = url;
    }

    
    @Column(name="description")
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="page")
    public Set<PageFunction> getPageFunctions() {
        return this.pageFunctions;
    }
    
    public void setPageFunctions(Set<PageFunction> pageFunctions) {
        this.pageFunctions = pageFunctions;
    }




}


