package com.techguy.application.model;
// Generated Jan 3, 2019 9:27:06 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * Technology generated by hbm2java
 */
@Entity
@Table(name="technology"
    ,catalog="techguy"
)
public class Technology  implements java.io.Serializable {


     private Integer technologyId;
     private String name;
     private Set<Cvdata> cvdatas = new HashSet<Cvdata>(0);
     private Set<Project> projects = new HashSet<Project>(0);

    public Technology() {
    }

    public Technology(String name, Set<Cvdata> cvdatas, Set<Project> projects) {
       this.name = name;
       this.cvdatas = cvdatas;
       this.projects = projects;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="technologyId", unique=true, nullable=false)
    public Integer getTechnologyId() {
        return this.technologyId;
    }
    
    public void setTechnologyId(Integer technologyId) {
        this.technologyId = technologyId;
    }

    
    @Column(name="name", length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="technology_has_cvdata", catalog="techguy", joinColumns = { 
        @JoinColumn(name="Technology_technologyId", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="CVData_cvDataId", nullable=false, updatable=false) })
    public Set<Cvdata> getCvdatas() {
        return this.cvdatas;
    }
    
    public void setCvdatas(Set<Cvdata> cvdatas) {
        this.cvdatas = cvdatas;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="technology_has_project", catalog="techguy", joinColumns = { 
        @JoinColumn(name="Technology_technologyId", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="Project_projectId", nullable=false, updatable=false) })
    public Set<Project> getProjects() {
        return this.projects;
    }
    
    public void setProjects(Set<Project> projects) {
        this.projects = projects;
    }




}


